{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "63bdfd88-dd37-470d-a2a4-19b242dbd11d",
   "metadata": {},
   "source": [
    "# Klasifikasi Tingkat Keganasan Tumor Otak"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "af46491a-c944-402e-9103-686cadcd696f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import time\n",
    "\n",
    "import pathlib\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "import tensorflow as tf\n",
    "import matplotlib.pyplot as plt\n",
    "from tensorflow.keras.applications import ResNet50V2\n",
    "from tensorflow.keras.applications import MobileNetV2\n",
    "from tensorflow.keras.applications.inception_resnet_v2 import InceptionResNetV2\n",
    "from tensorflow.keras import Sequential\n",
    "from tensorflow.keras.layers import Flatten, Dense, Input\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.applications.resnet_v2 import preprocess_input\n",
    "from tensorflow.keras.applications.mobilenet_v2 import preprocess_input\n",
    "from tensorflow.keras.preprocessing.image import img_to_array,  load_img\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import classification_report\n",
    "\n",
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from sklearn.preprocessing import LabelBinarizer\n",
    "\n",
    "from IPython.display import display, Markdown"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78448e7a-3d0d-4d0c-8391-d4a946d5060c",
   "metadata": {},
   "source": [
    "## Pengaturan Hyperparameter dan Konfigurasi Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "60c96950-1067-47ba-bbfa-a08e1c20a332",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Menginisialisasi learning rate, jumlah epoch, dan jumlah batch size\n",
    "INIT_LR = 1e-4\n",
    "EPOCHS = 30\n",
    "BS = 32\n",
    "SIZE_X = 112\n",
    "SIZE_Y = 112\n",
    "\n",
    "NETWORK = \"ResNet50V2_Tesis_SMOTE\"\n",
    "\n",
    "dataset = r\"C:\\Users\\Lab129\\Downloads\\Indi\\Dataset Kla 128\";\n",
    "model_path = NETWORK + \"_\" + str(EPOCHS) + \".model\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21aa5ea8-63a6-4187-b031-faf12456d778",
   "metadata": {},
   "source": [
    "## Pre-processing Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4e44e9b2-45d4-41e0-b42a-a1c22265f4fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[INFO] loading images...\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 47232 entries, 0 to 47231\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count  Dtype   \n",
      "---  ------  --------------  -----   \n",
      " 0   image   47232 non-null  string  \n",
      " 1   label   47232 non-null  category\n",
      "dtypes: category(1), string(1)\n",
      "memory usage: 415.4 KB\n"
     ]
    }
   ],
   "source": [
    "data_dir = pathlib.Path(dataset)\n",
    "\n",
    "print(\"[INFO] loading images...\")\n",
    "df = pd.DataFrame(\n",
    "    [(str(dir), str(dir).split(os.path.sep)[-3]) for dir in data_dir.glob(\"**/*.jpg\")],\n",
    "    columns=[\"image\", \"label\"],\n",
    ")\n",
    "\n",
    "# Mengatur tipe data\n",
    "df[\"image\"] = df[\"image\"].astype('string')\n",
    "df[\"label\"] = df[\"label\"].astype('category')\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b4d68bd4-53b0-4b95-b8e9-9598ec1ece02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Index(['HGG', 'LGG'], dtype='object'), array([0, 1], dtype=int8))"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"label\"].cat.categories, df[\"label\"].cat.codes.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "539d578b-9197-4d1c-a49a-19653b55a9a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "HGG    37504\n",
       "LGG     9728\n",
       "Name: label, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Memeriksa ketidakseimmbangan kelas\n",
    "class_count = df[\"label\"].value_counts()\n",
    "display(class_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "49119cac-69fa-4e84-8497-9edf68d09603",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Lakukan pengkodean one-hot encoding pada label\n",
    "label_encoder = LabelBinarizer()\n",
    "label_encoded = label_encoder.fit_transform(df[\"label\"])\n",
    "label_one_hot_encoded = to_categorical(label_encoded)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e8782262-9f39-454c-865f-0e77e0d5fa6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def image_reader(path: str):\n",
    "    image = tf.io.read_file(path)\n",
    "    image = tf.image.decode_jpeg(image, channels=3)\n",
    "    image = tf.image.resize(image, [SIZE_X, SIZE_Y])\n",
    "    image = preprocess_input(image)\n",
    "    return image\n",
    "\n",
    "def image_generator(path: str, label):\n",
    "    image = image_reader(path)\n",
    "    return image, label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "551eaefa-a7a8-42af-ada9-8addf0dd3fe3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "**Train images count**: 37785\n",
       "\n",
       "**Test images count**: 9447"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Membagi data menjadi set pelatihan dan set pengujian\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    df[\"image\"], label_one_hot_encoded, test_size=0.20, random_state=42, stratify=df[\"label\"]\n",
    ")\n",
    "\n",
    "display(Markdown((\n",
    "    f\"**Train images count**: {X_train.count()}\\n\\n\"\n",
    "    f\"**Test images count**: {X_test.count()}\"\n",
    ")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "eb5bb98a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/markdown": [
       "**Train images count**: 60006\n",
       "\n",
       "**Test images count**: 9447"
      ],
      "text/plain": [
       "<IPython.core.display.Markdown object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Menginisialisasi objek SMOTE\n",
    "sm = SMOTE(random_state=42)\n",
    "\n",
    "# Melakukan resample dataset\n",
    "X_train_idx, y_train = sm.fit_resample(X_train.index.values.reshape(-1, 1), y_train)\n",
    "\n",
    "X_train = df.iloc[X_train_idx.flatten()][\"image\"]\n",
    "y_train = to_categorical(y_train)\n",
    "\n",
    "\n",
    "display(Markdown((\n",
    "    f\"**Train images count**: {X_train.count()}\\n\\n\"\n",
    "    f\"**Test images count**: {X_test.count()}\"\n",
    ")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f772bfca-e5ff-4e1b-9e81-143bc4f7afac",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_total_items = len(X_train)\n",
    "train_num_batches = train_total_items // BS\n",
    "train_dataset = tf.data.Dataset.from_tensor_slices((X_train, y_train)).map(\n",
    "    image_generator, num_parallel_calls=tf.data.AUTOTUNE\n",
    ").shuffle(train_total_items).repeat(EPOCHS).batch(BS).prefetch(tf.data.AUTOTUNE)\n",
    "\n",
    "val_total_items = len(X_test)\n",
    "val_num_batches = val_total_items // BS\n",
    "val_dataset =  tf.data.Dataset.from_tensor_slices((X_test, y_test)).map(\n",
    "    image_generator, num_parallel_calls=tf.data.AUTOTUNE\n",
    ").batch(BS).prefetch(tf.data.AUTOTUNE)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccecc2d4-551f-4c89-8567-19738d504448",
   "metadata": {},
   "source": [
    "## Pengembangan Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2aa92969-c858-4894-9269-83e073a09395",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:`input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n",
      "(None, 4, 4, 1280)\n"
     ]
    }
   ],
   "source": [
    "starttime = time.time()\n",
    "# Memuat jaringan MobileNetV2, memastikan adanya kumpulan lapisan\n",
    "baseModel = ResNet50V2(weights=\"imagenet\", include_top=False,\n",
    "                       input_tensor=Input(shape=(SIZE_X, SIZE_Y, 3)))\n",
    "\n",
    "# baseModel = MobileNetV2(weights=\"imagenet\", include_top=False,\n",
    "#                         input_tensor=Input(shape=(SIZE_X, SIZE_Y, 3)))\n",
    "\n",
    "# baseModel = InceptionResNetV2(weights=\"imagenet\", include_top=False,\n",
    "#                               input_tensor=Input(shape=(SIZE_X, SIZE_Y, 3)))\n",
    "\n",
    "baseModel.trainable = False\n",
    "\n",
    "# Membangun head model\n",
    "headModel = baseModel.output  # outshape = 4 x 4 x 1280 channel\n",
    "print(headModel.shape)\n",
    "\n",
    "headModel = Flatten(name=\"flatten\")(headModel)\n",
    "headModel = Dense(512, activation=\"relu\")(headModel)\n",
    "headModel = Dense(2, activation=\"softmax\")(headModel)\n",
    "\n",
    "# Tempatkan head model di atas base model\n",
    "model = Model(inputs=baseModel.input, outputs=headModel)\n",
    "# model.summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9b343efc-9d7f-440f-ab43-2fa8cc730bfa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[INFO] compiling model...\n"
     ]
    }
   ],
   "source": [
    "# Lakukan kompilasi model (mengukur accuracy)\n",
    "print(\"[INFO] compiling model...\")\n",
    "opt = Adam(learning_rate=INIT_LR, decay=INIT_LR / EPOCHS)\n",
    "model.compile(loss=\"categorical_crossentropy\", optimizer=opt,\n",
    "              metrics=[\"accuracy\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a72c2f03-fa66-4878-80ea-c51d6a9bec28",
   "metadata": {},
   "source": [
    "## Proses Pelatihan Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3adf2316-45aa-4e59-9ccc-695f0fcb1d08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[INFO] training head...\n",
      "Epoch 1/30\n",
      "1875/1875 [==============================] - 212s 74ms/step - loss: 0.3876 - accuracy: 0.8220 - val_loss: 0.4250 - val_accuracy: 0.8097\n",
      "Epoch 2/30\n",
      "1875/1875 [==============================] - 128s 68ms/step - loss: 0.1848 - accuracy: 0.9207 - val_loss: 0.1870 - val_accuracy: 0.9221\n",
      "Epoch 3/30\n",
      "1875/1875 [==============================] - 115s 62ms/step - loss: 0.1131 - accuracy: 0.9518 - val_loss: 0.1431 - val_accuracy: 0.9338\n",
      "Epoch 4/30\n",
      "1875/1875 [==============================] - 101s 54ms/step - loss: 0.0802 - accuracy: 0.9650 - val_loss: 0.1952 - val_accuracy: 0.9280\n",
      "Epoch 5/30\n",
      "1875/1875 [==============================] - 90s 48ms/step - loss: 0.0637 - accuracy: 0.9715 - val_loss: 0.1239 - val_accuracy: 0.9538\n",
      "Epoch 6/30\n",
      "1875/1875 [==============================] - 79s 42ms/step - loss: 0.0521 - accuracy: 0.9763 - val_loss: 0.1295 - val_accuracy: 0.9530\n",
      "Epoch 7/30\n",
      "1875/1875 [==============================] - 74s 39ms/step - loss: 0.0420 - accuracy: 0.9805 - val_loss: 0.1560 - val_accuracy: 0.9478\n",
      "Epoch 8/30\n",
      "1875/1875 [==============================] - 68s 36ms/step - loss: 0.0422 - accuracy: 0.9804 - val_loss: 0.1099 - val_accuracy: 0.9588\n",
      "Epoch 9/30\n",
      "1875/1875 [==============================] - 64s 34ms/step - loss: 0.0338 - accuracy: 0.9840 - val_loss: 0.1402 - val_accuracy: 0.9441\n",
      "Epoch 10/30\n",
      "1875/1875 [==============================] - 61s 33ms/step - loss: 0.0338 - accuracy: 0.9834 - val_loss: 0.1221 - val_accuracy: 0.9526\n",
      "Epoch 11/30\n",
      "1875/1875 [==============================] - 58s 31ms/step - loss: 0.0356 - accuracy: 0.9833 - val_loss: 0.1121 - val_accuracy: 0.9635\n",
      "Epoch 12/30\n",
      "1875/1875 [==============================] - 57s 31ms/step - loss: 0.0261 - accuracy: 0.9862 - val_loss: 0.1211 - val_accuracy: 0.9576\n",
      "Epoch 13/30\n",
      "1875/1875 [==============================] - 55s 30ms/step - loss: 0.0308 - accuracy: 0.9854 - val_loss: 0.1229 - val_accuracy: 0.9554\n",
      "Epoch 14/30\n",
      "1875/1875 [==============================] - 54s 29ms/step - loss: 0.0230 - accuracy: 0.9879 - val_loss: 0.1259 - val_accuracy: 0.9518\n",
      "Epoch 15/30\n",
      "1875/1875 [==============================] - 54s 29ms/step - loss: 0.0283 - accuracy: 0.9864 - val_loss: 0.1218 - val_accuracy: 0.9675\n",
      "Epoch 16/30\n",
      "1875/1875 [==============================] - 53s 28ms/step - loss: 0.0232 - accuracy: 0.9876 - val_loss: 0.1008 - val_accuracy: 0.9640\n",
      "Epoch 17/30\n",
      "1875/1875 [==============================] - 53s 28ms/step - loss: 0.0256 - accuracy: 0.9877 - val_loss: 0.1009 - val_accuracy: 0.9603\n",
      "Epoch 18/30\n",
      "1875/1875 [==============================] - 53s 28ms/step - loss: 0.0205 - accuracy: 0.9886 - val_loss: 0.1070 - val_accuracy: 0.9655\n",
      "Epoch 19/30\n",
      "1875/1875 [==============================] - 52s 28ms/step - loss: 0.0216 - accuracy: 0.9879 - val_loss: 0.1488 - val_accuracy: 0.9619\n",
      "Epoch 20/30\n",
      "1875/1875 [==============================] - 52s 28ms/step - loss: 0.0207 - accuracy: 0.9884 - val_loss: 0.1257 - val_accuracy: 0.9597\n",
      "Epoch 21/30\n",
      "1875/1875 [==============================] - 51s 27ms/step - loss: 0.0211 - accuracy: 0.9890 - val_loss: 0.0947 - val_accuracy: 0.9761\n",
      "Epoch 22/30\n",
      "1875/1875 [==============================] - 51s 27ms/step - loss: 0.0220 - accuracy: 0.9888 - val_loss: 0.0906 - val_accuracy: 0.9781\n",
      "Epoch 23/30\n",
      "1875/1875 [==============================] - 51s 27ms/step - loss: 0.0200 - accuracy: 0.9889 - val_loss: 0.0944 - val_accuracy: 0.9772\n",
      "Epoch 24/30\n",
      "1875/1875 [==============================] - 51s 27ms/step - loss: 0.0223 - accuracy: 0.9882 - val_loss: 0.1139 - val_accuracy: 0.9631\n",
      "Epoch 25/30\n",
      "1875/1875 [==============================] - 50s 27ms/step - loss: 0.0188 - accuracy: 0.9903 - val_loss: 0.1295 - val_accuracy: 0.9694\n",
      "Epoch 26/30\n",
      "1875/1875 [==============================] - 50s 27ms/step - loss: 0.0188 - accuracy: 0.9891 - val_loss: 0.1247 - val_accuracy: 0.9610\n",
      "Epoch 27/30\n",
      "1875/1875 [==============================] - 50s 27ms/step - loss: 0.0134 - accuracy: 0.9914 - val_loss: 0.1080 - val_accuracy: 0.9659\n",
      "Epoch 28/30\n",
      "1875/1875 [==============================] - 50s 27ms/step - loss: 0.0205 - accuracy: 0.9889 - val_loss: 0.0976 - val_accuracy: 0.9677\n",
      "Epoch 29/30\n",
      "1875/1875 [==============================] - 50s 27ms/step - loss: 0.0186 - accuracy: 0.9904 - val_loss: 0.1026 - val_accuracy: 0.9768\n",
      "Epoch 30/30\n",
      "1875/1875 [==============================] - 49s 26ms/step - loss: 0.0199 - accuracy: 0.9893 - val_loss: 0.1397 - val_accuracy: 0.9578\n"
     ]
    }
   ],
   "source": [
    "# Lakukan pelatihan untuk head network\n",
    "print(\"[INFO] training head...\")\n",
    "H = model.fit(train_dataset,\n",
    "              batch_size=BS, \n",
    "              verbose=1, \n",
    "              steps_per_epoch=train_num_batches,\n",
    "              epochs=EPOCHS, \n",
    "              validation_data=val_dataset,\n",
    "              validation_steps=val_num_batches,\n",
    "              validation_batch_size=BS,\n",
    "              shuffle=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a84722c-005d-4ecd-b9e8-b86bf974f20c",
   "metadata": {},
   "source": [
    "## Uji Coba dan Evaluasi Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "15ad82a6-6317-43ad-8bfa-f5514aa8e148",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[INFO] evaluating network...\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "         HGG       0.99      0.96      0.97      7501\n",
      "         LGG       0.85      0.96      0.90      1946\n",
      "\n",
      "    accuracy                           0.96      9447\n",
      "   macro avg       0.92      0.96      0.94      9447\n",
      "weighted avg       0.96      0.96      0.96      9447\n",
      "\n",
      "Running time: 2043.5096752643585 s\n"
     ]
    }
   ],
   "source": [
    "# Buat prediksi pada set pengujian\n",
    "print(\"[INFO] evaluating network...\")\n",
    "predIdxs = model.predict(val_dataset, batch_size=BS)\n",
    "\n",
    "# Untuk setiap gambar dalam set pengujian kita perlu menemukan indeks file label dengan probabilitas prediksi terbesar yang sesuai\n",
    "predIdxs = np.argmax(predIdxs, axis=1)\n",
    "\n",
    "endtime = time.time()\n",
    "\n",
    "# Tampilkan classification report\n",
    "print(classification_report(y_test.argmax(axis=1), predIdxs,\n",
    "                            target_names=df[\"label\"].cat.categories))\n",
    "\n",
    "# Tampilkan running time\n",
    "print(\"Running time: {} s\".format(endtime - starttime))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "948d8802-783f-425b-9251-c908e64c4bf9",
   "metadata": {},
   "source": [
    "## Penyimpanan Model dan Visualisasi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "721f4a1d-ccb9-4bb7-a8f3-1a19a50f321f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[INFO] saving brain tumor malignancy detector model...\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lakukan penyimpanan model\n",
    "print(\"[INFO] saving brain tumor malignancy detector model...\")\n",
    "model.save(model_path, save_format=\"h5\")  # Save dalam format .h5\n",
    "\n",
    "# Munculkan hasil klasifikasi dan kompilasi dari pelatihan data\n",
    "epochs_range = range(EPOCHS)\n",
    "\n",
    "plt.style.use(\"ggplot\")\n",
    "plt.figure()\n",
    "plt.plot(epochs_range, H.history[\"accuracy\"], label=\"train_acc\")\n",
    "plt.plot(epochs_range, H.history[\"val_accuracy\"], label=\"val_acc\")\n",
    "plt.legend(loc='lower left')\n",
    "plt.title('Training and Validation Accuracy')\n",
    "plt.xlabel(\"Epoch\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.show()\n",
    "\n",
    "plt.style.use(\"ggplot\")\n",
    "plt.figure()\n",
    "plt.plot(epochs_range, H.history[\"loss\"], label=\"train_loss\")\n",
    "plt.plot(epochs_range, H.history[\"val_loss\"], label=\"val_loss\")\n",
    "plt.legend(loc=\"lower left\")\n",
    "plt.title(\"Training and Validation Loss\")\n",
    "plt.xlabel(\"Epoch\")\n",
    "plt.ylabel(\"Loss\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
